/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controlador.ControladorCarpas;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import modelo.Carpa;

/**
 *
 * @author val
 */
public class VentanaCarpas extends javax.swing.JFrame implements ActionListener {

    JButton[][] botones;
    ControladorCarpas controlador;

    /**
     * Creates new form VentanaCarpas
     */
    public VentanaCarpas() {
        initComponents();
        botones = new JButton[3][6];
        controlador = new ControladorCarpas();
        cargarBotones();
        validarPosiciones();
    }

    public void cargarBotones() {
        int ancho = 80;
        int alto = 80;
        int separado = 40;
        int texto = 1;
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                botones[i][j] = new JButton();
                botones[i][j].setBounds(
                        (j * ancho + separado),
                        (i * alto + separado),
                        ancho, alto);

                if (i == 1) {
                    botones[i][j].setBounds(
                            (j * ancho + separado),
                            (i * alto + (separado * 2)),
                            ancho, alto);
                }

                if (i == 2) {
                    botones[i][j].setBounds(
                            (j * ancho + separado),
                            (i * alto + (separado * 3)),
                            ancho, alto);
                }

                if (j >= 2) {
                    botones[i][j].setBounds(
                            (j * ancho + (separado * 3)),
                            (i * alto + (separado)),
                            ancho, alto);
                }

                if (i == 1 && j >= 2) {
                    botones[i][j].setBounds(
                            (j * ancho + (separado * 3)),
                            (i * alto + (separado*2)),
                            ancho, alto);
                }
                
                if (i == 2 && j >= 2) {
                    botones[i][j].setBounds(
                            (j * ancho + (separado * 3)),
                            (i * alto + (separado*3)),
                            ancho, alto);
                }
                
                if (j >= 4) {
                    botones[i][j].setBounds(
                            (j * ancho + (separado * 4)),
                            (i * alto + (separado)),
                            ancho, alto);
                }

                if (i == 1 && j >= 4) {
                    botones[i][j].setBounds(
                            (j * ancho + (separado * 4)),
                            (i * alto + (separado*2)),
                            ancho, alto);
                }
                
                if (i == 2 && j >= 4) {
                    botones[i][j].setBounds(
                            (j * ancho + (separado * 4)),
                            (i * alto + (separado*3)),
                            ancho, alto);
                }
                
                botones[i][j].setText(String.valueOf(texto));
                botones[i][j].addActionListener(this);
                panelBotones.add(botones[i][j]);
                texto++;
            }

        }
    }

    public void validarPosiciones() {
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                Carpa carpa = controlador.obtenerCarpas(i, j);
                if (carpa.getEstado().equals(Carpa.DISPONIBLE)) {
                    botones[i][j].setBackground(Color.white);
                } else {
                    botones[i][j].setBackground(Color.blue);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBotones = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 913, Short.MAX_VALUE)
        );
        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 492, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCarpas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCarpas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCarpas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCarpas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaCarpas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panelBotones;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                if (e.getSource().equals(botones[i][j])) {
                    Carpa carpa = controlador.obtenerCarpas(i, j);
                    if (carpa.getEstado().equals(Carpa.DISPONIBLE)) {
                        VentanaRegistrarCarpa ventana = new VentanaRegistrarCarpa(carpa);
                        ventana.setVisible(true);
                        this.dispose();
                    } else {
                        VentanaPersonasCarpa ventana = new VentanaPersonasCarpa(carpa);
                        ventana.setVisible(true);
                        this.dispose();
                    }
                }
            }
        }
    }
}
